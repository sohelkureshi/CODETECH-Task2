{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\internship\\\\MERN-Recipe-App-master\\\\client\\\\my-app\\\\src\\\\components\\\\AddRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Addrecipe.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRecipe = () => {\n  _s();\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    ingredients: [\"\"],\n    instructions: \"\",\n    imageUrl: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipe({\n      ...recipe,\n      [name]: value\n    });\n  };\n  const handleAddIngredient = () => {\n    const lastIngredient = recipe.ingredients[recipe.ingredients.length - 1];\n    if (lastIngredient !== \"\") {\n      setRecipe({\n        ...recipe,\n        ingredients: [...recipe.ingredients, \"\"]\n      });\n    }\n  };\n  const handleIngredientChange = (index, value) => {\n    const updatedIngredients = [...recipe.ingredients];\n    updatedIngredients[index] = value;\n    setRecipe({\n      ...recipe,\n      ingredients: updatedIngredients\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Send a POST request to add the recipe to the server\n\n    const nonEmptyIngredients = recipe.ingredients.filter(ingredient => ingredient.trim() !== \"\");\n    if (nonEmptyIngredients.length === 0) {\n      toast.warn(\"Please provide at least one non-empty ingredient.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/recipe\",\n      // Change the URL to your local server\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(recipe)\n      });\n      ;\n      if (response.ok) {\n        // Recipe added successfully, you can show a success message or redirect to another page\n        toast.success(\"Recipe added successfully\");\n        setTimeout(() => {\n          window.location.href = \"/recipes\";\n        }, 4000);\n      } else {\n        toast.error(\"Failed to add recipe:\", response.status);\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while adding the recipe:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-recipe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: recipe.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ingredient,\n          onChange: e => handleIngredientChange(index, e.target.value)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddIngredient,\n          children: \"Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"instructions\",\n          value: recipe.instructions,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"imageUrl\",\n          value: recipe.imageUrl,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRecipe, \"hzY49w5ZAFSKEqnPLDS/TuRg/bw=\");\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","jsxDEV","_jsxDEV","AddRecipe","_s","recipe","setRecipe","title","ingredients","instructions","imageUrl","handleInputChange","e","name","value","target","handleAddIngredient","lastIngredient","length","handleIngredientChange","index","updatedIngredients","handleSubmit","preventDefault","nonEmptyIngredients","filter","ingredient","trim","warn","response","fetch","method","headers","body","JSON","stringify","ok","success","setTimeout","window","location","href","error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","map","onClick","_c","$RefreshReg$"],"sources":["C:/coding/internship/MERN-Recipe-App-master/client/my-app/src/components/AddRecipe.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Addrecipe.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the CSS for styling\n\nconst AddRecipe = () => {\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    ingredients: [\"\"],\n    instructions: \"\",\n    imageUrl: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setRecipe({\n      ...recipe,\n      [name]: value,\n    });\n  };\n\n  const handleAddIngredient = () => {\n    const lastIngredient = recipe.ingredients[recipe.ingredients.length - 1];\n    if (lastIngredient !== \"\") {\n      setRecipe({\n        ...recipe,\n        ingredients: [...recipe.ingredients, \"\"],\n      });\n    }\n  };\n\n  const handleIngredientChange = (index, value) => {\n    const updatedIngredients = [...recipe.ingredients];\n    updatedIngredients[index] = value;\n    setRecipe({\n      ...recipe,\n      ingredients: updatedIngredients,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Send a POST request to add the recipe to the server\n\n    const nonEmptyIngredients = recipe.ingredients.filter(\n      (ingredient) => ingredient.trim() !== \"\"\n    );\n\n    if (nonEmptyIngredients.length === 0) {\n      toast.warn(\"Please provide at least one non-empty ingredient.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"http://localhost:8000/auth/recipe\", // Change the URL to your local server\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(recipe),\n        }\n      );\n      \n      ;\n\n      if (response.ok) {\n        // Recipe added successfully, you can show a success message or redirect to another page\n        toast.success(\"Recipe added successfully\");\n\n        setTimeout(() => {\n          window.location.href = \"/recipes\";\n        }, 4000);\n      } else {\n        toast.error(\"Failed to add recipe:\", response.status);\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while adding the recipe:\", error);\n    }\n  };\n\n  return (\n    <div className=\"add-recipe\">\n      <h2>Add Recipe</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={recipe.title}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Ingredients:</label>\n          {recipe.ingredients.map((ingredient, index) => (\n            <input\n              type=\"text\"\n              key={index}\n              value={ingredient}\n              onChange={(e) => handleIngredientChange(index, e.target.value)}\n            />\n          ))}\n          <button type=\"button\" onClick={handleAddIngredient}>\n            Add Ingredient\n          </button>\n        </div>\n        <div>\n          <label>Instructions:</label>\n          <textarea\n            name=\"instructions\"\n            value={recipe.instructions}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Image URL:</label>\n          <input\n            type=\"text\"\n            name=\"imageUrl\"\n            value={recipe.imageUrl}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Add Recipe</button>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}