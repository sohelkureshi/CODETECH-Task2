{"ast":null,"code":"var _jsxFileName = \"C:\\\\coding\\\\internship\\\\MERN-Recipe-App-master\\\\client\\\\my-app\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showError, setShowError] = useState(false); // State to control the error message visibility\n  const Email = email.toLowerCase();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password || !name) {\n      // If any of the fields are empty, show the error message\n      setShowError(true);\n      return; // Prevent further execution\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email: Email,\n          password\n        })\n      });\n      if (response.ok) {\n        const user = await response.json();\n        if (user.error) {\n          toast.warn(\"User already exists. Try with different email\");\n        } else {\n          toast.success(\"Registration successful.\");\n          localStorage.setItem(\"token\", user.token);\n          setTimeout(() => {\n            window.location.href = \"/\";\n          }, 4000);\n        }\n      } else {\n        console.error(\"Failed to register user:\", response.status);\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while registering user:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignupContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Your email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fill-fields-error\",\n      children: \"Please Fill all the fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Rc42+v4Ucx2i8iptKfkTbJW0IFo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","showError","setShowError","Email","toLowerCase","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","user","json","error","warn","success","localStorage","setItem","token","setTimeout","window","location","href","console","status","className","children","action","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/coding/internship/MERN-Recipe-App-master/client/my-app/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the CSS for styling\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showError, setShowError] = useState(false); // State to control the error message visibility\n  const Email = email.toLowerCase();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email || !password || !name) {\n      // If any of the fields are empty, show the error message\n      setShowError(true);\n      return; // Prevent further execution\n    }\n\n    try {\n      const response = await fetch(\n        \"http://localhost:8000/auth/register\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name, email: Email, password }),\n        }\n      );\n\n      if (response.ok) {\n        const user = await response.json();\n\n        if (user.error) {\n          toast.warn(\"User already exists. Try with different email\");\n        } else {\n          toast.success(\"Registration successful.\");\n          localStorage.setItem(\"token\", user.token);\n          setTimeout(() => {\n            window.location.href = \"/\";\n          }, 4000);\n        }\n      } else {\n        console.error(\"Failed to register user:\", response.status);\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while registering user:\", error);\n    }\n  };\n\n  return (\n    <div className=\"SignupContainer\">\n      <form action=\"\" onSubmit={(e) => handleSubmit(e)}>\n        <h2>SignUp</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Enter Your email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Enter Your password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {showError && (\n        <span className=\"fill-fields-error\">Please Fill all the fields</span>\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}